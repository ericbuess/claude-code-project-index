{
  "indexed_at": "2025-08-21T22:34:34.147618",
  "root": ".",
  "project_structure": {
    "type": "tree",
    "root": ".",
    "tree": [
      ".",
      "\u251c\u2500\u2500 scripts/ (9 files)",
      "\u251c\u2500\u2500 tests/ (4 files)",
      "\u2514\u2500\u2500 README.md"
    ]
  },
  "documentation_map": {
    ".claude-code-ericbuess/CONTEXT_STATE.md": {
      "sections": [
        "\ud83d\udd04 Auto-Generated Context State",
        "\ud83d\udccd Current Session",
        "\ud83d\udcca Git Status",
        "\ud83d\udcdd Recently Modified Files",
        "\ud83d\udccc Context Notes"
      ],
      "architecture_hints": []
    },
    ".claude/agents/index-analyzer.md": {
      "sections": [
        "YOUR PRIMARY DIRECTIVE",
        "DENSE FORMAT SUPPORT",
        "ULTRATHINKING FRAMEWORK",
        "Understanding Intent",
        "Code Relationship Analysis",
        "Strategic Recommendations",
        "OUTPUT FORMAT",
        "\ud83e\udde0 Code Intelligence Analysis",
        "UNDERSTANDING YOUR REQUEST",
        "ESSENTIAL CODE PATHS"
      ],
      "architecture_hints": []
    },
    "INDEX_AWARE_MODE.md": {
      "sections": [
        "Index-Aware Mode for Claude Code",
        "Overview",
        "Quick Start",
        "How It Works",
        "System Architecture",
        "Components",
        "Features",
        "Dynamic Index Sizing",
        "Smart Caching & Regeneration",
        "Clipboard Mode (`-ic`)"
      ],
      "architecture_hints": []
    },
    "README.md": {
      "sections": [
        "Project Index for Claude Code (v0.2.0-beta)",
        "\ud83d\ude80 Quick Install",
        "\ud83d\udcd6 Usage",
        "No Manual Setup Required!",
        "Simply add -i to any prompt",
        "Using the Index",
        "Add -i flag to any prompt",
        "Reference directly in your prompt",
        "Or auto-load in every session by adding to CLAUDE.md:",
        "Add @PROJECT_INDEX.json to your CLAUDE.md file"
      ],
      "architecture_hints": []
    }
  },
  "directory_purposes": {
    "scripts": "Build and utility scripts"
  },
  "stats": {
    "total_files": 12,
    "total_directories": 4,
    "fully_parsed": {
      "python": 6,
      "shell": 1
    },
    "listed_only": {
      "json": 1,
      "shell": 4
    },
    "markdown_files": 5
  },
  "files": {
    "scripts/detect_external_changes.py": {
      "language": "python",
      "parsed": true,
      "imports": [
        "os",
        "json",
        "pathlib",
        "datetime",
        "subprocess",
        "sys"
      ],
      "functions": {
        "get_file_mtime": {
          "line": 13,
          "signature": "(file_path)",
          "called_by": [
            "detect_external_changes"
          ]
        },
        "detect_external_changes": {
          "line": 21,
          "calls": [
            "get_file_mtime"
          ],
          "signature": "(index_path, project_root)"
        },
        "check_git_changes": {
          "line": 83,
          "signature": "(project_root)"
        }
      },
      "classes": {},
      "call_graph": {}
    },
    "scripts/find_python.sh": {
      "language": "shell",
      "parsed": true,
      "functions": {
        "find_python": "()"
      },
      "call_graph": {}
    },
    "scripts/index_aware_hook.py": {
      "language": "python",
      "parsed": true,
      "imports": [
        "json",
        "sys",
        "os",
        "re",
        "subprocess",
        "hashlib",
        "time",
        "pathlib",
        "datetime",
        "sys",
        "vm_client_network",
        "vm_client",
        "base64",
        "pyperclip"
      ],
      "functions": {
        "find_project_root": {
          "line": 23,
          "signature": "()",
          "called_by": [
            "get_last_interactive_size",
            "main"
          ]
        },
        "get_last_interactive_size": {
          "line": 45,
          "calls": [
            "find_project_root"
          ],
          "signature": "()",
          "called_by": [
            "parse_index_flag"
          ]
        },
        "parse_index_flag": {
          "line": 66,
          "calls": [
            "get_last_interactive_size"
          ],
          "signature": "(prompt)",
          "called_by": [
            "main"
          ]
        },
        "calculate_files_hash": {
          "line": 104,
          "signature": "(project_root)",
          "called_by": [
            "should_regenerate_index",
            "generate_index_at_size"
          ]
        },
        "should_regenerate_index": {
          "line": 141,
          "calls": [
            "calculate_files_hash"
          ],
          "signature": "(project_root, index_path, requested_size_k)",
          "called_by": [
            "main"
          ]
        },
        "generate_index_at_size": {
          "line": 173,
          "calls": [
            "calculate_files_hash"
          ],
          "signature": "(project_root, target_size_k, is_clipboard_mode=False)",
          "called_by": [
            "main"
          ]
        },
        "copy_to_clipboard": {
          "line": 259,
          "signature": "(prompt, index_path)",
          "called_by": [
            "main"
          ]
        },
        "main": {
          "line": 566,
          "calls": [
            "copy_to_clipboard",
            "find_project_root",
            "generate_index_at_size",
            "parse_index_flag",
            "should_regenerate_index"
          ],
          "signature": "()"
        }
      },
      "classes": {},
      "constants": {
        "DEFAULT_SIZE_K": "number",
        "MIN_SIZE_K": "number",
        "CLAUDE_MAX_K": "number",
        "EXTERNAL_MAX_K": "number"
      },
      "call_graph": {}
    },
    "scripts/index_utils.py": {
      "language": "python",
      "parsed": true,
      "purpose": "Utility functions",
      "imports": [
        "re",
        "fnmatch",
        "pathlib",
        "typing",
        "subprocess"
      ],
      "functions": {
        "extract_function_calls_python": {
          "line": 73,
          "signature": "(body: str, all_functions: Set[str]) -> List[str]",
          "called_by": [
            "extract_python_signatures"
          ]
        },
        "extract_function_calls_javascript": {
          "line": 103,
          "signature": "(body: str, all_functions: Set[str]) -> List[str]",
          "called_by": [
            "extract_javascript_signatures"
          ]
        },
        "build_call_graph": {
          "line": 131,
          "signature": "(functions: Dict, classes: Dict) -> Tuple[Dict, Dict]"
        },
        "extract_python_signatures": {
          "line": 160,
          "calls": [
            "extract_function_calls_python"
          ],
          "signature": "(content: str) -> Dict[str, Dict]"
        },
        "extract_javascript_signatures": {
          "line": 544,
          "calls": [
            "extract_function_calls_javascript",
            "pos_to_line"
          ],
          "signature": "(content: str) -> Dict[str, any]"
        },
        "extract_function_calls_shell": {
          "line": 905,
          "signature": "(body: str, all_functions: Set[str]) -> List[str]",
          "called_by": [
            "extract_shell_signatures"
          ]
        },
        "extract_shell_signatures": {
          "line": 927,
          "calls": [
            "extract_function_calls_shell"
          ],
          "signature": "(content: str) -> Dict[str, any]"
        },
        "extract_markdown_structure": {
          "line": 1185,
          "signature": "(file_path: Path) -> Dict[str, List[str]]"
        },
        "infer_file_purpose": {
          "line": 1216,
          "signature": "(file_path: Path) -> Optional[str]"
        },
        "infer_directory_purpose": {
          "line": 1239,
          "signature": "(path: Path, files_within: List[str]) -> Optional[str]"
        },
        "get_language_name": {
          "line": 1269,
          "signature": "(extension: str) -> str"
        },
        "parse_gitignore": {
          "line": 1280,
          "signature": "(gitignore_path: Path) -> List[str]",
          "called_by": [
            "load_gitignore_patterns"
          ]
        },
        "load_gitignore_patterns": {
          "line": 1300,
          "calls": [
            "parse_gitignore"
          ],
          "signature": "(root_path: Path) -> Set[str]",
          "called_by": [
            "should_index_file"
          ]
        },
        "matches_gitignore_pattern": {
          "line": 1323,
          "signature": "(path: Path, patterns: Set[str], root_path: Path) -> bool",
          "called_by": [
            "should_index_file"
          ]
        },
        "should_index_file": {
          "line": 1367,
          "calls": [
            "load_gitignore_patterns",
            "matches_gitignore_pattern"
          ],
          "signature": "(path: Path, root_path: Path = None) -> bool"
        },
        "get_git_files": {
          "line": 1387,
          "signature": "(root_path: Path) -> Optional[List[Path]]"
        }
      },
      "classes": {},
      "constants": {
        "IGNORE_DIRS": "collection",
        "PARSEABLE_LANGUAGES": "collection",
        "CODE_EXTENSIONS": "collection",
        "MARKDOWN_EXTENSIONS": "collection",
        "DIRECTORY_PURPOSES": "collection"
      },
      "call_graph": {}
    },
    "scripts/project_index.py": {
      "language": "python",
      "parsed": true,
      "imports": [
        "json",
        "os",
        "re",
        "datetime",
        "pathlib",
        "typing",
        "index_utils",
        "index_utils",
        "sys"
      ],
      "functions": {
        "generate_tree_structure": {
          "line": 40,
          "calls": [
            "add_tree_level",
            "should_include_dir"
          ],
          "signature": "(root_path: Path, max_depth: int = MAX_TREE_DEPTH) -> List[str]",
          "called_by": [
            "build_index"
          ]
        },
        "build_index": {
          "line": 109,
          "calls": [
            "generate_tree_structure"
          ],
          "signature": "(root_dir: str) -> Tuple[Dict, int]",
          "called_by": [
            "main"
          ]
        },
        "convert_to_dense_format": {
          "line": 402,
          "signature": "(index: Dict) -> Dict",
          "called_by": [
            "compress_index_if_needed"
          ]
        },
        "compress_index_if_needed": {
          "line": 508,
          "calls": [
            "convert_to_dense_format"
          ],
          "signature": "(index: Dict, target_size: int = MAX_INDEX_SIZE) -> Dict",
          "called_by": [
            "main"
          ]
        },
        "print_summary": {
          "line": 640,
          "signature": "(index: Dict, skipped_count: int)",
          "called_by": [
            "main"
          ]
        },
        "main": {
          "line": 688,
          "calls": [
            "build_index",
            "compress_index_if_needed",
            "print_summary"
          ],
          "signature": "()"
        }
      },
      "classes": {},
      "constants": {
        "MAX_FILES": "number",
        "MAX_INDEX_SIZE": "value",
        "MAX_TREE_DEPTH": "number"
      },
      "call_graph": {}
    },
    "scripts/reindex_if_needed.py": {
      "language": "python",
      "parsed": true,
      "imports": [
        "json",
        "sys",
        "os",
        "subprocess",
        "pathlib",
        "datetime"
      ],
      "functions": {
        "check_index_features": {
          "line": 21,
          "signature": "(index_path)",
          "called_by": [
            "main"
          ]
        },
        "check_index_staleness": {
          "line": 39,
          "signature": "(index_path, threshold_hours=24)",
          "called_by": [
            "main"
          ]
        },
        "check_missing_documentation": {
          "line": 52,
          "signature": "(index_path, project_root)",
          "called_by": [
            "main"
          ]
        },
        "check_structural_changes": {
          "line": 73,
          "signature": "(index_path, project_root)",
          "called_by": [
            "main"
          ]
        },
        "count_hook_updates": {
          "line": 98,
          "signature": "(index_path)",
          "called_by": [
            "main"
          ]
        },
        "run_reindex": {
          "line": 117,
          "signature": "(project_root)",
          "called_by": [
            "main"
          ]
        },
        "main": {
          "line": 183,
          "calls": [
            "check_index_features",
            "check_index_staleness",
            "check_missing_documentation",
            "check_structural_changes",
            "count_hook_updates",
            "run_reindex"
          ],
          "signature": "()"
        }
      },
      "classes": {},
      "call_graph": {}
    },
    "scripts/update_index.py": {
      "language": "python",
      "parsed": true,
      "imports": [
        "json",
        "sys",
        "os",
        "pathlib",
        "datetime",
        "index_utils"
      ],
      "functions": {
        "find_index_utils": {
          "line": 20,
          "signature": "()"
        },
        "update_file_in_index": {
          "line": 63,
          "signature": "(index_path, file_path, project_root)",
          "called_by": [
            "main"
          ]
        },
        "main": {
          "line": 167,
          "calls": [
            "update_file_in_index"
          ],
          "signature": "()"
        }
      },
      "classes": {},
      "call_graph": {}
    }
  },
  "dependency_graph": {
    "scripts/detect_external_changes.py": [
      "os",
      "json",
      "pathlib",
      "datetime",
      "subprocess",
      "sys"
    ],
    "scripts/index_aware_hook.py": [
      "json",
      "sys",
      "os",
      "re",
      "subprocess",
      "hashlib",
      "time",
      "pathlib",
      "datetime",
      "sys",
      "vm_client_network",
      "vm_client",
      "base64",
      "pyperclip"
    ],
    "scripts/index_utils.py": [
      "re",
      "fnmatch",
      "pathlib",
      "typing",
      "subprocess"
    ],
    "scripts/project_index.py": [
      "json",
      "os",
      "re",
      "datetime",
      "pathlib",
      "typing",
      "index_utils",
      "index_utils",
      "sys"
    ],
    "scripts/reindex_if_needed.py": [
      "json",
      "sys",
      "os",
      "subprocess",
      "pathlib",
      "datetime"
    ],
    "scripts/update_index.py": [
      "json",
      "sys",
      "os",
      "pathlib",
      "datetime",
      "index_utils"
    ]
  },
  "staleness_check": 1755228874.173525,
  "_dense": {
    "v": "2.0",
    "f": {
      "s/detect_external_changes.py": [
        "p",
        [
          "get_file_mtime:13:(file_path):",
          "detect_external_changes:21:(index_path, project_root):get_file_mtime",
          "check_git_changes:83:(project_root):"
        ]
      ],
      "s/find_python.sh": [
        "s",
        [
          "find_python:0:():"
        ]
      ],
      "s/index_aware_hook.py": [
        "p",
        [
          "find_project_root:23:():",
          "get_last_interactive_size:45:():find_project_root",
          "parse_index_flag:66:(prompt):get_last_interactive_size",
          "calculate_files_hash:104:(project_root):",
          "should_regenerate_index:141:(project_root, index_path, requested_size_k):calculate_files_hash",
          "generate_index_at_size:173:(project_root, target_size_k, is_clipboard_mode=False):calculate_files_hash",
          "copy_to_clipboard:259:(prompt, index_path):",
          "main:566:():copy_to_clipboard,find_project_root,generate_index_at_size,parse_index_flag,should_regenerate_index"
        ]
      ],
      "s/index_utils.py": [
        "p",
        [
          "extract_function_calls_python:73:(body:str, all_functions:Set[str])>List[str]:",
          "extract_function_calls_javascript:103:(body:str, all_functions:Set[str])>List[str]:",
          "build_call_graph:131:(functions:Dict, classes:Dict)>Tuple[Dict, Dict]:",
          "extract_python_signatures:160:(content:str)>Dict[str, Dict]:extract_function_calls_python",
          "extract_javascript_signatures:544:(content:str)>Dict[str, any]:extract_function_calls_javascript,pos_to_line",
          "extract_function_calls_shell:905:(body:str, all_functions:Set[str])>List[str]:",
          "extract_shell_signatures:927:(content:str)>Dict[str, any]:extract_function_calls_shell",
          "extract_markdown_structure:1185:(file_path:Path)>Dict[str, List[str]]:",
          "infer_file_purpose:1216:(file_path:Path)>Optional[str]:",
          "infer_directory_purpose:1239:(path:Path, files_within:List[str])>Optional[str]:",
          "get_language_name:1269:(extension:str)>str:",
          "parse_gitignore:1280:(gitignore_path:Path)>List[str]:",
          "load_gitignore_patterns:1300:(root_path:Path)>Set[str]:parse_gitignore",
          "matches_gitignore_pattern:1323:(path:Path, patterns:Set[str], root_path:Path)>bool:",
          "should_index_file:1367:(path:Path, root_path:Path = None)>bool:load_gitignore_patterns,matches_gitignore_pattern",
          "get_git_files:1387:(root_path:Path)>Optional[List[Path]]:"
        ]
      ],
      "s/project_index.py": [
        "p",
        [
          "generate_tree_structure:40:(root_path:Path, max_depth:int = MAX_TREE_DEPTH)>List[str]:add_tree_level,should_include_dir",
          "build_index:109:(root_dir:str)>Tuple[Dict, int]:generate_tree_structure",
          "convert_to_dense_format:402:(index:Dict)>Dict:",
          "compress_index_if_needed:508:(index:Dict, target_size:int = MAX_INDEX_SIZE)>Dict:convert_to_dense_format",
          "print_summary:640:(index:Dict, skipped_count:int):",
          "main:688:():build_index,compress_index_if_needed,print_summary"
        ]
      ],
      "s/reindex_if_needed.py": [
        "p",
        [
          "check_index_features:21:(index_path):",
          "check_index_staleness:39:(index_path, threshold_hours=24):",
          "check_missing_documentation:52:(index_path, project_root):",
          "check_structural_changes:73:(index_path, project_root):",
          "count_hook_updates:98:(index_path):",
          "run_reindex:117:(project_root):",
          "main:183:():check_index_features,check_index_staleness,check_missing_documentation,check_structural_changes,count_hook_updates,run_reindex"
        ]
      ],
      "s/update_index.py": [
        "p",
        [
          "find_index_utils:20:():",
          "update_file_in_index:63:(index_path, file_path, project_root):",
          "main:167:():update_file_in_index"
        ]
      ]
    },
    "g": [
      [
        "should_regenerate_index",
        "calculate_files_hash"
      ],
      [
        "main",
        "print_summary"
      ],
      [
        "main",
        "copy_to_clipboard"
      ],
      [
        "compress_index_if_needed",
        "convert_to_dense_format"
      ],
      [
        "should_index_file",
        "load_gitignore_patterns"
      ],
      [
        "generate_index_at_size",
        "calculate_files_hash"
      ],
      [
        "build_index",
        "generate_tree_structure"
      ],
      [
        "should_index_file",
        "matches_gitignore_pattern"
      ],
      [
        "main",
        "check_missing_documentation"
      ],
      [
        "extract_shell_signatures",
        "extract_function_calls_shell"
      ],
      [
        "generate_tree_structure",
        "should_include_dir"
      ],
      [
        "extract_javascript_signatures",
        "extract_function_calls_javascript"
      ],
      [
        "main",
        "find_project_root"
      ],
      [
        "main",
        "build_index"
      ],
      [
        "main",
        "should_regenerate_index"
      ],
      [
        "generate_tree_structure",
        "add_tree_level"
      ],
      [
        "extract_javascript_signatures",
        "pos_to_line"
      ],
      [
        "detect_external_changes",
        "get_file_mtime"
      ],
      [
        "main",
        "compress_index_if_needed"
      ],
      [
        "main",
        "run_reindex"
      ],
      [
        "main",
        "check_structural_changes"
      ],
      [
        "main",
        "count_hook_updates"
      ],
      [
        "extract_python_signatures",
        "extract_function_calls_python"
      ],
      [
        "main",
        "check_index_staleness"
      ],
      [
        "main",
        "update_file_in_index"
      ],
      [
        "main",
        "parse_index_flag"
      ],
      [
        "get_last_interactive_size",
        "find_project_root"
      ],
      [
        "main",
        "check_index_features"
      ],
      [
        "main",
        "generate_index_at_size"
      ],
      [
        "load_gitignore_patterns",
        "parse_gitignore"
      ],
      [
        "parse_index_flag",
        "get_last_interactive_size"
      ]
    ],
    "d": {
      ".claude-code-ericbuess/CONTEXT_STATE.md": [
        "\ud83d\udd04 Auto-Generated Context State",
        "\ud83d\udccd Current Session",
        "\ud83d\udcca Git Status",
        "\ud83d\udcdd Recently Modified Files",
        "\ud83d\udccc Context Notes"
      ],
      ".claude/agents/index-analyzer.md": [
        "YOUR PRIMARY DIRECTIVE",
        "ULTRATHINKING FRAMEWORK",
        "Understanding Intent",
        "Code Relationship Analysis",
        "Strategic Recommendations"
      ],
      "INDEX_AWARE_MODE.md": [
        "Index-Aware Mode for Claude Code",
        "Overview",
        "Quick Start",
        "How It Works",
        "System Architecture"
      ],
      "README.md": [
        "Project Index for Claude Code (v0.2.0-beta)",
        "\ud83d\ude80 Quick Install",
        "\ud83d\udcd6 Usage",
        "No Manual Setup Required!",
        "Simply add -i to any prompt"
      ]
    },
    "m": {
      "at": "2025-08-21T22:34:34.147618",
      "files": 7,
      "edges": 31
    }
  },
  "_meta": {
    "target_size_k": 1
  }
}